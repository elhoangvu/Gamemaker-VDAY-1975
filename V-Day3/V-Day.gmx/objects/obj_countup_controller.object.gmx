<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
- Countup Timer -
Created by SlasherX
*/

//First we set the following to 0.
seconds = 0;
minutes = 0;
hours = 0;

//We make sure the timer doesn't start immediately.
count_up = false;//set to true if you want the timer to start when obj_countup_controller is created.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If it's allowed to start.
if (count_up == true)
{
    seconds += 1/room_speed; //increment seconds by 1 ever real-time second.
}

//If seconds hits around 60.
if (seconds &lt; 60) &amp;&amp; (seconds &gt; 59.9)
{
    seconds = 0;
    minutes += 1;//increment minutes by 1.
}

//If minutes hits 60.
if (minutes == 60)
{
    minutes = 0;
    hours += 1;//increment hours by 1.
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Setting up the display
draw_set_font(fnt_1);
draw_set_color(c_white);

var draw_seconds;
draw_seconds = floor(seconds);

if (seconds &lt;= 10) &amp;&amp; (minutes &lt; 10)
{
    draw_text(x, y, string(hours) + ":0" + string(minutes) + ":0" + string(draw_seconds));
}
else if (seconds &gt;= 10) &amp;&amp; (minutes &gt;= 10)
{
    draw_text(x, y, string(hours) + ":" + string(minutes) + ":" + string(draw_seconds));
}
else if (seconds &lt; 10) &amp;&amp; (minutes &gt;= 10)
{
    draw_text(x, y, string(hours) + ":" + string(minutes) + ":0" + string(draw_seconds));
}
else if (seconds &gt;= 10) &amp;&amp; (minutes &lt; 10)
{
    draw_text(x, y, string(hours) + ":0" + string(minutes) + ":" + string(draw_seconds));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
